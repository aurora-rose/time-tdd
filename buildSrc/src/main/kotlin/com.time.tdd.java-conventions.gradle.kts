/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
  `java-library`
  `maven-publish`
  eclipse
  id("com.diffplug.eclipse.apt")
}

repositories {

  flatDir {
    dirs(rootProject.file("libs"))
  }

  maven {
    url = uri("https://maven.aliyun.com/nexus/content/groups/public/")

    // isAllowInsecureProtocol = true
  }

  mavenCentral()

  maven {
    url = uri("https://app.camunda.com/nexus/content/groups/public")
  }

  maven {
    url = uri("https://maven.alfresco.com/nexus/content/groups/public")
  }

  maven {
    url = uri("https://repo.maven.apache.org/maven2/")
  }

  maven {
    url = uri("https://oss.sonatype.org/content/repositories/snapshots")
  }

  // mavenLocal()
}

group = "com.time.tdd"
version = "1.0.0-SNAPSHOT"
java.sourceCompatibility = JavaVersion.VERSION_17

dependencies {
  implementation(platform("org.springframework.boot:spring-boot-dependencies:${Versions.springboot}"))
  constraints {
    implementation("org.mybatis:mybatis:3.5.10-SNAPSHOT") {
      because("ognl表达式在jdk 17下有bug")
    }
  }
  testImplementation("org.junit.jupiter:junit-jupiter-api:5.8.1")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.8.1")
}

publishing {
  publications.create<MavenPublication>("maven") {
    from(components["java"])
  }
}

val enablePreview = "--enable-preview"

tasks.withType<JavaCompile> {
  options.encoding = "UTF-8"
  options.compilerArgs.add(enablePreview)
}

tasks.test {
  useJUnitPlatform()
  jvmArgs(enablePreview)
}

tasks.withType<JavaExec> {
  jvmArgs(enablePreview)
}

eclipse {
  synchronizationTasks(tasks.eclipseJdtApt, tasks.eclipseJdt, tasks.cleanEclipseFactorypath, tasks.eclipseFactorypath)
}
